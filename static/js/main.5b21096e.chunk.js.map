{"version":3,"sources":["components/Controls/Input/Input.jsx","components/Controls/Button/Button.jsx","redux/actions.js","utils/functions.js","components/Form/Form.jsx","components/Todos/Form.jsx","components/Todos/Item.jsx","components/Todos/List.jsx","components/Modal/Modal.jsx","components/Todos/Modal.jsx","App.jsx","reportWebVitals.js","redux/reducers.js","redux/store.js","index.js"],"names":["Input","forwardRef","ref","type","placeholder","className","Button","text","onButtonClick","onClick","ADD_TODO","REMOVE_TODO","UPDATE_TODO","TOGGLE_MODAL","updateTodo","payload","toggleModal","generateId","letters","numbers","Array","map","_","k","Math","ceil","random","sort","i","length","join","getDefaultPlaceholder","defaultPlaceholders","floor","Form","children","onSubmitEvent","onSubmit","e","preventDefault","TodoForm","dispatch","useDispatch","inputRef","useRef","current","value","todo","title","id","TodoItem","isPaused","countdownAsMs","countdownAsString","buttonRef","useState","pause","setPause","timer","stopwatch","start","elapsed","store","useStore","useEffect","handleStop","undefined","getState","modal","isVisible","context","innerHTML","clearInterval","diffS","diffM","diffH","diffD","ss","mm","hh","dd","Date","now","setInterval","toString","padStart","connect","state","todos","t","Modal","header","App","handleUnload","window","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","action","filter","newList","initialState","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b21096e.chunk.js","sourcesContent":["import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types';\n\nconst Input = forwardRef(({type, placeholder, className}, ref) => {\n  return (\n    <input \n      type={type}\n      placeholder={placeholder}\n      ref={ref}\n      className={className}\n    />\n  )\n})\n\nexport default Input\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n}","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport const Button = ({type, text, className, onButtonClick = null}, ref) => {\n  \n  return (\n    <button \n      type={type} \n      onClick={onButtonClick}\n      className={className}\n    >{text}</button>\n  )\n}\n\nexport default Button\n\nButton.propTypes = {\n  type : PropTypes.oneOf([ 'submit', 'button' ]).isRequired, \n  text : PropTypes.string, \n  className : PropTypes.string, \n  onButtonClick : PropTypes.func\n}\n","export const ADD_TODO = 'ADD_TODO';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const UPDATE_TODO = 'UPDATE_TODO';\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL';\n\nexport const addTodo = payload => ({ type: ADD_TODO, payload });\nexport const removeTodo = payload => ({ type: REMOVE_TODO, payload });\nexport const updateTodo = payload => ({ type: UPDATE_TODO, payload });\nexport const toggleModal = payload => ({ type: TOGGLE_MODAL, payload });","export function generateId() {\n  const letters = 'abcdefghijklmnopqrstuvwxyz';\n  const numbers = '0123456789';\n  const scheme = [ ...new Array(10) ].map( (_, k) => Math.ceil(Math.random() * k) > 1 ? 0 : 1 ).sort( _ => 0.5 - Math.random());\n  \n  const id = scheme.map( (i, k) => {\n    var char = '';\n    \n    if(i === 1) \n      char = letters[Math.ceil(Math.random() * letters.length - 1)];\n    else\n      char = numbers[Math.ceil(Math.random() * numbers.length - 1)];\n\n    return char\n  }).join('');\n\n  return id;\n}\n\nexport function getDefaultPlaceholder() {\n  const defaultPlaceholders = [\n    'Сделать пиццу',\n    'Поиграть на гитаре',\n    'Сходить в магазин',\n    'Прогуляться',\n    'Встретиться с друзьями'\n  ];\n\n  return defaultPlaceholders[Math.floor(Math.random() * (defaultPlaceholders.length - 1))];\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Form({children, onSubmitEvent, className}) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmitEvent();\n  }\n  return (\n    <form onSubmit={ handleSubmit } className={className}>\n      {children}\n    </form>\n  )\n}\n\nForm.propTypes = {\n  children: PropTypes.array.isRequired\n}\n\nexport default Form\n\n","import React, { useRef } from 'react'\nimport { useDispatch } from 'react-redux';\nimport Input from '../Controls/Input/Input';\nimport Button from '../Controls/Button/Button';\nimport { addTodo } from '../../redux/actions';\nimport { generateId, getDefaultPlaceholder } from '../../utils/functions';\nimport Form from '../Form/Form';\n\nfunction TodoForm() {\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n\n  const handleSubmit = _ => {\n    if(inputRef.current.value === '') return false;\n    \n    const todo = { title: inputRef.current.value, id: generateId() };\n    dispatch(addTodo( todo ));\n\n    inputRef.current.value = '';\n    inputRef.current.placeholder = getDefaultPlaceholder()\n  }\n\n  return (\n    <Form \n      onSubmitEvent={ handleSubmit } \n      className=\"todo__form\" \n    >\n      <Input \n        ref={inputRef} \n        type='text' \n        placeholder={ getDefaultPlaceholder() }\n        className=\"input todo__form-input\"\n      />\n      <Button \n        type='submit' \n        text=\"Добавить\"\n        className=\"button button--teal\"\n      />\n    </Form>\n  )\n}\n\nexport default TodoForm\n","import React, { useState, useRef, useEffect } from 'react'\nimport { toggleModal, updateTodo } from '../../redux/actions';\nimport Button from '../Controls/Button/Button'\nimport { useDispatch, useStore } from 'react-redux';\n\nexport default function TodoItem({id, isPaused, title, countdownAsMs, countdownAsString, buttonRef }) {\n  const [pause, setPause] = useState(isPaused)\n  let timer = useRef();\n  let stopwatch = useRef();\n  let start = useRef();\n  let elapsed = useRef(countdownAsMs ? countdownAsMs : 0);\n  \n  const dispatch = useDispatch();\n  const store = useStore();\n\n  useEffect(() => {\n    // ...\n  }, [ isPaused ])\n\n  const handleStart = _ => {\n    start.current = Date.now() - elapsed.current;\n    let diffS, diffM, diffH, diffD;\n    let ss, mm, hh, dd;\n    \n    timer.current = setInterval( _ => {\n      elapsed.current = Date.now() - start.current;\n\n      diffD = Math.floor(elapsed.current / (1000 * 60 * 60 * 24));\n      diffH = Math.floor((elapsed.current % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      diffM = Math.floor((elapsed.current % (1000 * 60 * 60)) / (1000 * 60));\n      diffS = Math.floor((elapsed.current % (1000 * 60)) / 1000);\n      \n      ss = diffS.toString().padStart(2, '0');\n      mm = diffM.toString().padStart(2, '0');\n      hh = diffH.toString().padStart(2, '0');\n      dd = diffD.toString().padStart(2, '0');\n\n      stopwatch.current.innerHTML = `${dd}:${hh}:${mm}:${ss}`;\n    }, 1000 );\n\n    if(store.getState().modal.isVisible) {\n      const todo = { id, timer : timer.current }\n      \n      dispatch(toggleModal({ context: todo, isVisible: false }));\n    }\n          \n    dispatch(updateTodo({ \n      id, \n      isPaused : false,\n      countdownAsMs : elapsed.current,\n      countdownAsString : stopwatch.current.innerHTML\n    }));\n    \n    setPause(false)\n  }\n\n  const handleStop = _ => {\n    if(timer.current !== undefined) {\n      const todo = { id, timer : timer.current };\n      \n      if(store.getState().modal.isVisible) {\n        dispatch(toggleModal({ context: todo, isVisible: false }));\n      }\n      \n      dispatch(updateTodo({ \n        id, \n        isPaused : true,\n        countdownAsMs : elapsed.current,\n        countdownAsString : stopwatch.current.innerHTML,\n      }));\n\n      clearInterval(timer.current);\n    }\n\n    setPause(true)\n  }\n\n  const showModal = _ => {\n    handleStop();\n    const todo = { id, timer : timer.current };\n\n    dispatch(toggleModal({ context: todo, isVisible: true}));  \n  }\n\n  return (\n    <li className=\"todo__list-item\">\n      <p className=\"text text--header todo__list-block todo__list-block--header todo__list-text todo__list-text--header\">{title}</p>\n      <p className=\"text text--header todo__list-block todo__list-block--timer todo__list-text todo__list-text--header\">\n        <span ref={stopwatch}>{ countdownAsString }</span>\n        { \n          pause ? \n            <Button type=\"button\" className=\"button button--icon button--play\" onButtonClick={ handleStart }  /> : \n            <Button type=\"button\" className=\"button button--icon button--pause\" onButtonClick={ handleStop }  /> \n        }\n      </p>\n      <div className=\"todo__list-block todo__list-block--delete\">\n        <Button className=\"button button--icon button--delete\" type=\"button\" onButtonClick={ showModal }/>\n      </div>\n    </li>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport TodoItem from './Item'\n\nfunction TodoList({todos}) {\n\n  return (\n    <ul className=\"list todo__list\">\n      {\n        todos.map( \n          t => {\n            const { title, id, isPaused, countdownAsMs, countdownAsString } = t;\n\n            return(\n              <TodoItem \n                title={title} \n                key={id} \n                id={id} \n                isPaused={isPaused ? isPaused : true} \n                countdownAsMs={countdownAsMs ? countdownAsMs : 0 } \n                countdownAsString={countdownAsString ? countdownAsString : '00:00:00:00'}\n              />\n            )\n          }\n        )\n      }\n    </ul>\n  )\n}\n\nconst mapStateToProps = state => ({ todos: state.todos });\n\nexport default connect(mapStateToProps)(TodoList)\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport default function Modal({ header, children }) {\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__bg\"></div>\n      <div className=\"modal__window\">\n        <h1 className=\"text text--header modal__text--header\">{header}</h1>\n        {children}      \n      </div>\n    </div>\n  )\n}\n\nModal.propTypes = {\n  header: PropTypes.string.isRequired,\n  children: PropTypes.array,\n}\n","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { removeTodo, toggleModal } from '../../redux/actions';\nimport Button from '../Controls/Button/Button';\nimport Modal from '../Modal/Modal';\n\nfunction TodoModal({modal}) {\n  const dispatch = useDispatch();\n\n  const handleYes = _ => {\n    if( !modal.isVisible ) return false;\n    \n    if( modal.context.timer !== undefined ) clearInterval( modal.context.timer );\n    \n    dispatch( removeTodo(modal.context.id) );\n    dispatch( toggleModal( { context: null, isVisible: false } ) )      \n\n    return;\n  }\n  const handleNo = _ => {\n    if( !modal.isVisible ) return false;\n\n    dispatch( toggleModal( { context: modal.context, isVisible: false } ) )  \n  };\n\n  if(modal.isVisible === false) return null;\n\n  return (\n    <Modal header=\"Вы уверены?\" type={`default`}>\n      <p className=\"text text--regular modal__text--caption\">Задание будет удалено</p>\n      <div className=\"modal__buttons\">\n        <Button type=\"button\" text=\"Да\" className=\"button button--flat button--flat-red\" onButtonClick={ handleYes } />\n        <Button type=\"button\" text=\"Нет\" className=\"button button--flat button--flat-blue\" onButtonClick={ handleNo } />\n      </div>\n    </Modal>\n  )\n}\n\nconst mapDispatchToProps = state => ({ modal: state.modal });\n\nexport default connect(mapDispatchToProps)(TodoModal);\n\n\n","import React, { useEffect } from 'react'\n\nimport TodoForm from './components/Todos/Form';\nimport TodoList from './components/Todos/List';\nimport TodoModal from './components/Todos/Modal';\n\nexport default function App() {\n  const handleUnload = e => {\n    e.preventDefault();\n\n    // code for stopping all timers\n    // ...\n  }\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', handleUnload);\n    \n    return () => {\n      window.removeEventListener('beforeunload', handleUnload);\n    }\n  });\n  useEffect(() => {\n  \n  }, []);\n\n  return (\n    <main className=\"main\">\n      <TodoForm />\n      <TodoList />\n      <TodoModal />\n    </main>\n  )\n}\n\n// export default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as action from './actions';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['modal']\n}\n\nconst rootReducer = ( state, {type, payload} ) => {\n  switch(type) {\n    case action.ADD_TODO:\n      return{\n        ...state,\n        todos: [\n          payload,\n          ...state.todos\n        ]\n      }\n\n    case action.REMOVE_TODO:\n      const todos = state.todos.filter( i => i.id !== payload )\n      \n      return {\n        ...state,\n        todos\n      }  \n\n    case action.UPDATE_TODO:\n      const newList = state.todos.map( i => {\n        if(i.id === payload.id) {\n          i.countdownAsString = payload.countdownAsString;\n          i.countdownAsMs = payload.countdownAsMs;\n          i.isPaused = payload.isPaused;\n        }\n        \n        return i;\n      });\n      \n      return {\n        ...state,\n        todos: newList\n      }    \n\n    case action.TOGGLE_MODAL:  \n      return {\n        ...state,\n        modal: { \n          context : payload.context, \n          isVisible : payload.isVisible \n        }\n      }  \n    \n    default: return  { ...state }\n  }\n}\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);","import { createStore } from 'redux';\nimport { persistedReducer } from './reducers';\nimport { persistStore } from 'redux-persist';\nimport { generateId } from '../utils/functions';\n\nconst initialState = {\n  todos: [\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n    { title: 'Sample test', id: generateId(), isPaused: false, countdownAsMs: 0, countdownAsString: '00:00:00:00'},\n  ],\n  modal: {\n    context: null,\n    isVisible: false\n  }\n}\n\nconst store = createStore(\n  persistedReducer, \n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nconst persistor = persistStore(store);\n\nexport {store, persistor};","// ● При превышении списком размеров экрана поле ввода должно остаться\n// наверху, список должен прокручиваться.\n\n// ● Вёрстка может быть самой примитивной, но должна быть. (Положение\n// элементов, марджины, паддинги)\n\n// ● Иконки для кнопок взять из font-awesome, палитру цветов из Material Design.\n\n// ● Перезагрузка телефона не должна менять состояния задач. В случае, если,\n// задача сдаётся на веб-версии React’а, закрытие вкладки и браузера не\n// должно менять состояния задач.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, persistor } from './redux/store';\n\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './scss/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}