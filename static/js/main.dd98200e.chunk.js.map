{"version":3,"sources":["reportWebVitals.js","redux/actions.js","redux/reducers.js","redux/store.js","components/Controls/Input/Input.jsx","components/Controls/Button/Button.jsx","utils/functions.js","components/Form/Form.jsx","components/Todos/Form.jsx","components/Todos/Item.jsx","components/Todos/List.jsx","components/Modal/Modal.jsx","components/Todos/Modal.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_TODO","REMOVE_TODO","TOGGLE_MODAL","toggleModal","payload","type","persistConfig","key","storage","persistedReducer","persistReducer","state","action","todos","filter","i","id","modal","context","isVisible","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","Input","forwardRef","ref","placeholder","className","Button","text","onButtonClick","onClick","generateId","letters","numbers","Array","map","_","k","Math","ceil","random","sort","length","join","getDefaultPlaceholder","defaultPlaceholders","floor","Form","children","onSubmitEvent","onSubmit","e","preventDefault","TodoForm","dispatch","useDispatch","inputRef","useRef","current","value","todo","title","counter","TodoItem","timer","stopwatch","start","elapsed","useState","isPaused","setState","useStore","handleStop","undefined","getState","clearInterval","diffS","diffM","diffH","diffD","ss","mm","hh","dd","Date","now","setInterval","toString","padStart","innerHTML","connect","t","Modal","header","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd98200e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const ADD_TODO = 'ADD_TODO';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL';\n\nexport const addTodo = payload => ({ type: ADD_TODO, payload });\nexport const removeTodo = payload => ({ type: REMOVE_TODO, payload });\nexport const toggleModal = payload => ({ type: TOGGLE_MODAL, payload });","import * as action from './actions';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\nconst rootReducer = ( state, {type, payload} ) => {\n  switch(type) {\n    case action.ADD_TODO:\n      return{\n        ...state,\n        todos: [\n          payload,\n          ...state.todos\n        ]\n      }\n\n    case action.REMOVE_TODO:\n      const todos = state.todos.filter( i => i.id !== payload )\n      \n      return {\n        ...state,\n        todos\n      }  \n\n    case action.TOGGLE_MODAL:  \n      return {\n        ...state,\n        modal: { \n          context : payload.context, \n          isVisible : payload.isVisible \n        }\n      }  \n    \n    default: return  { ...state }\n  }\n}\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);","import { createStore } from 'redux';\nimport { persistedReducer } from './reducers';\nimport { persistStore } from 'redux-persist';\n\nconst initialState = {\n  todos: [],\n  modal: {\n    context: null,\n    isVisible: false\n  }\n}\n\nconst store = createStore(\n  persistedReducer, \n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nconst persistor = persistStore(store);\n\nexport {store, persistor};","import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types';\n\nconst Input = forwardRef(({type, placeholder, className}, ref) => {\n  return (\n    <input \n      type={type}\n      placeholder={placeholder}\n      ref={ref}\n      className={className}\n    />\n  )\n})\n\nexport default Input\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n}","import React from 'react'\nimport PropTypes from 'prop-types';\n\nfunction Button({type, text, className, onButtonClick = null}) {\n  return (\n    <button \n      type={type} \n      onClick={onButtonClick}\n      className={className}\n    >{text}</button>\n  )\n}\n\nexport default Button\n\nButton.propTypes = {\n  type : PropTypes.oneOf([ 'submit', 'button' ]).isRequired, \n  text : PropTypes.string, \n  className : PropTypes.string, \n  onButtonClick : PropTypes.func\n}\n","export function generateId() {\n  const letters = 'abcdefghijklmnopqrstuvwxyz';\n  const numbers = '0123456789';\n  const scheme = [ ...new Array(10) ].map( (_, k) => Math.ceil(Math.random() * k) > 1 ? 0 : 1 ).sort( _ => 0.5 - Math.random());\n  \n  const id = scheme.map( (i, k) => {\n    var char = '';\n    \n    if(i === 1) \n      char = letters[Math.ceil(Math.random() * letters.length - 1)];\n    else\n      char = numbers[Math.ceil(Math.random() * numbers.length - 1)];\n\n    return char\n  }).join('');\n\n  return id;\n}\n\nexport function getDefaultPlaceholder() {\n  const defaultPlaceholders = [\n    'Сделать пиццу',\n    'Поиграть на гитаре',\n    'Сходить в магазин',\n    'Прогуляться',\n    'Встретиться с друзьями'\n  ];\n\n  return defaultPlaceholders[Math.floor(Math.random() * (defaultPlaceholders.length - 1))];\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Form({children, onSubmitEvent, className}) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmitEvent();\n  }\n  return (\n    <form onSubmit={ handleSubmit } className={className}>\n      {children}\n    </form>\n  )\n}\n\nForm.propTypes = {\n  children: PropTypes.array.isRequired\n}\n\nexport default Form\n\n","import React, { useRef } from 'react'\nimport { useDispatch } from 'react-redux';\nimport Input from '../Controls/Input/Input';\nimport Button from '../Controls/Button/Button';\nimport { addTodo } from '../../redux/actions';\nimport { generateId, getDefaultPlaceholder } from '../../utils/functions';\nimport Form from '../Form/Form';\n\nfunction TodoForm() {\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n\n\n  const handleSubmit = _ => {\n    if(inputRef.current.value === '') return false;\n    \n    const todo = { title: inputRef.current.value, id: generateId(), counter : 0 };\n    dispatch(addTodo( todo ));\n\n    inputRef.current.value = '';\n    inputRef.current.placeholder = getDefaultPlaceholder()\n  }\n\n  return (\n    <Form \n      onSubmitEvent={ handleSubmit } \n      className=\"todo__form\" \n    >\n      <Input \n        ref={inputRef} \n        type='text' \n        placeholder={ getDefaultPlaceholder() }\n        className=\"input todo__form-input\"\n      />\n      <Button \n        type='submit' \n        text=\"Добавить\"\n        className=\"button button--teal\"\n      />\n    </Form>\n  )\n}\n\nexport default TodoForm\n","import React, { useState, useRef } from 'react'\nimport { toggleModal } from '../../redux/actions';\nimport Button from '../Controls/Button/Button'\nimport { useDispatch, useStore } from 'react-redux';\n\nexport default function TodoItem({id, title, counter}) {\n  let timer = useRef();\n  let stopwatch = useRef();\n  let start = useRef();\n  let elapsed = useRef(0);\n\n  const [ isPaused, setState ] = useState(true);\n  const dispatch = useDispatch();\n  const store = useStore();\n\n  const handleStart = _ => {\n    start.current = Date.now() - elapsed.current;\n    let diffS, diffM, diffH, diffD;\n    let ss, mm, hh, dd;\n    \n    timer.current = setInterval( _ => {\n      elapsed.current = Date.now() - start.current;\n\n      diffD = Math.floor(elapsed.current / (1000 * 60 * 60 * 24));\n      diffH = Math.floor((elapsed.current % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      diffM = Math.floor((elapsed.current % (1000 * 60 * 60)) / (1000 * 60));\n      diffS = Math.floor((elapsed.current % (1000 * 60)) / 1000);\n      \n      ss = diffS.toString().padStart(2, '0');\n      mm = diffM.toString().padStart(2, '0');\n      hh = diffH.toString().padStart(2, '0');\n      dd = diffD.toString().padStart(2, '0');\n\n      stopwatch.current.innerHTML = `${dd}:${hh}:${mm}:${ss}`;\n    }, 1000 );\n\n    if(store.getState().modal.isVisible) {\n      const todo = { id, timer : timer.current }\n\n      dispatch(toggleModal({ context: todo, isVisible: false }));\n    }\n\n    setState(false);\n  }\n\n  const handleStop = _ => {\n    if(timer.current !== undefined) {\n      if(store.getState().modal.isVisible) {\n        const todo = { id, timer : timer.current };\n        \n        dispatch(toggleModal({ context: todo, isVisible: false }));\n      }\n      \n      clearInterval(timer.current);\n    }\n\n    setState(true);\n  }\n\n  const showModal = _ => {\n    handleStop();\n    const todo = { id, timer : timer.current }\n\n    dispatch(toggleModal({ context: todo, isVisible: true}));  \n  }\n\n  return (\n    <li className=\"todo__list-item\">\n      <p className=\"text text--header todo__list-block todo__list-block--header todo__list-text todo__list-text--header\">{title}</p>\n      <p className=\"text text--header todo__list-block todo__list-block--timer todo__list-text todo__list-text--header\">\n        <span ref={stopwatch}>00:00:00:00</span>\n        { \n          isPaused ? \n            <Button type=\"button\" className=\"button button--icon button--play\" onButtonClick={ handleStart }  /> : \n            <Button type=\"button\" className=\"button button--icon button--pause\" onButtonClick={ handleStop }  /> \n        }\n      </p>\n      <div className=\"todo__list-block todo__list-block--delete\">\n        <Button className=\"button button--icon button--delete\" type=\"button\" onButtonClick={ showModal }/>\n      </div>\n    </li>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport TodoItem from './Item'\n\nfunction TodoList({todos}) {\n  return (\n    <ul className=\"list todo__list\">\n      {\n        todos.map( \n          t => <TodoItem title={t.title} key={t.id} id={t.id}/>\n        )\n      }\n    </ul>\n  )\n}\n\nconst mapStateToProps = state => ({ todos: state.todos });\n\nexport default connect(mapStateToProps)(TodoList)\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport default function Modal({ header, children }) {\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__bg\"></div>\n      <div className=\"modal__window\">\n        <h1 className=\"text text--header modal__text--header\">{header}</h1>\n        {children}      \n      </div>\n    </div>\n  )\n}\n\nModal.propTypes = {\n  header: PropTypes.string.isRequired,\n  children: PropTypes.array,\n}\n","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { removeTodo, toggleModal } from '../../redux/actions';\nimport Button from '../Controls/Button/Button';\nimport Modal from '../Modal/Modal';\n\nfunction TodoModal({modal}) {\n  const dispatch = useDispatch();\n\n  const handleYes = _ => {\n    if( !modal.isVisible ) return false;\n    \n    if( modal.context.timer !== undefined ) clearInterval( modal.context.timer );\n    \n    dispatch( removeTodo(modal.context.id) );\n    dispatch( toggleModal( { context: null, isVisible: false } ) )      \n\n    return;\n  }\n  const handleNo = _ => {\n    if( !modal.isVisible ) return false;\n\n    dispatch( toggleModal( { context: modal.context, isVisible: false } ) )  \n  };\n\n  if(modal.isVisible === false) return null;\n\n  return (\n    <Modal header=\"Вы уверены?\" type={`default`}>\n      <p className=\"text text--regular modal__text--caption\">Задание будет удалено</p>\n      <div className=\"modal__buttons\">\n        <Button type=\"button\" text=\"Да\" className=\"button button--flat button--flat-red\" onButtonClick={ handleYes } />\n        <Button type=\"button\" text=\"Нет\" className=\"button button--flat button--flat-blue\" onButtonClick={ handleNo } />\n      </div>\n    </Modal>\n  )\n}\n\nconst mapDispatchToProps = state => ({ modal: state.modal });\n\nexport default connect(mapDispatchToProps)(TodoModal);\n\n\n","// ● При превышении списком размеров экрана поле ввода должно остаться\n// наверху, список должен прокручиваться.\n\n// ● Вёрстка может быть самой примитивной, но должна быть. (Положение\n// элементов, марджины, паддинги)\n\n// ● Иконки для кнопок взять из font-awesome, палитру цветов из Material Design.\n\n// ● Перезагрузка телефона не должна менять состояния задач. В случае, если,\n// задача сдаётся на веб-версии React’а, закрытие вкладки и браузера не\n// должно менять состояния задач.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n\nimport TodoForm from './components/Todos/Form';\nimport TodoList from './components/Todos/List';\nimport TodoModal from './components/Todos/Modal';\n\nimport './scss/main.scss';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <main className=\"main\">\n          <TodoForm />\n          <PersistGate persistor={persistor}>\n            <TodoList />\n            <TodoModal />\n          </PersistGate>\n        </main>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}